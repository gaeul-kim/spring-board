<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/beans/spring-beans.xsd
	http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security.xsd">

	<http pattern="/**/*.js" security="none" />
	<http pattern="/**/*.css" security="none" />

	<http auto-config="true" use-expressions="true">
		<intercept-url pattern="/admin/**" access="hasRole('ADMIN')" />
		<intercept-url pattern="/member/login" access="isAnonymous()" />
		<intercept-url pattern="/member/register" access="isAnonymous()" />
		<intercept-url pattern="/articles/notice/write" access="hasRole('ADMIN')" />
		<intercept-url pattern="/articles/**/write" access="hasAnyRole('USER','ADMIN')" />
		<intercept-url pattern="/" access="permitAll" />
		
		<form-login login-page="/member/login" username-parameter="memberId"
			password-parameter="memberPassword" default-target-url="/"

            login-processing-url="/member/loginProcess"
			authentication-success-handler-ref="customAuthenticationSuccessHandler"
			authentication-failure-handler-ref="customAuthenticationFailureHandler" />


		<logout logout-success-url="/" delete-cookies="JSESSIONID" />

	</http>

	<authentication-manager>
		<authentication-provider user-service-ref="customJdbcDaoImpl">
			<password-encoder ref="bcryptPasswordEncoder" />
		</authentication-provider>
	</authentication-manager>

	<beans:bean id="customJdbcDaoImpl"
		class="sampleProject.common.security.dao.CustomJdbcDaoImpl">
		<beans:property name="dataSource" ref="dataSource" />
		<beans:property name="rolePrefix" value="" />
		<beans:property name="usersByUsernameQuery"
			value="SELECT memberId, memberPassword, memberName FROM member WHERE memberId = ?" />
		<beans:property name="authoritiesByUsernameQuery"
			value="SELECT authorityCode FROM member_authority where memberId = ?"></beans:property>
		<beans:property name="enableGroups" value="false" />
	</beans:bean>

	<!-- 로그인 성공 작업 핸들러 -->
	<beans:bean id="customAuthenticationSuccessHandler"
		class="sampleProject.common.security.handler.CustomAuthenticationSuccessHandler">
		<beans:property name="targetUrlParameter" value="loginRedirect"></beans:property>
		<beans:property name="useReferer" value="false"></beans:property>
		<beans:property name="defaultUrl" value="/"></beans:property>
	</beans:bean>

	<!-- 로그인 실패 작업 핸들러 -->
	<beans:bean id="customAuthenticationFailureHandler"
		class="sampleProject.common.security.handler.CustomAuthenticationFailureHandler">
		<beans:property name="loginIdName" value="memberId" />
		<beans:property name="loginPasswordName" value="memberPassword" />
		<beans:property name="loginRedirectName" value="loginRedirect" />
		<beans:property name="exceptionMessageName" value="securityExceptionMessage" />
	</beans:bean>

	<!-- 암호화 -->
	<beans:bean id="bcryptPasswordEncoder"
		class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" />

</beans:beans>
